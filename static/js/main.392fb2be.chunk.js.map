{"version":3,"sources":["components/layout/Header.js","components/AddTodo.js","components/TodoItem.js","components/Todo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","AddTodo","state","title","onSubmit","e","preventDefault","props","addTodo","setState","onChange","target","name","value","this","display","type","flex","placeholder","className","Component","TodoItem","getStyle","borderBottom","todo","completed","markComplete","console","log","id","bind","onClick","delTodo","btnStyle","border","borderRadius","cursor","float","Todo","todos","map","key","About","Fragment","App","uuid","v4","filter","newTodo","basename","exact","path","render","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.392fb2be.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';  //to import links in the header\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n          <h1>To-do List</h1>\r\n          <Link style={linkStyle} to='/'>Home</Link> | <Link style={linkStyle} to='/about'>About</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background:'#333',\r\n    color:'#fff',\r\n    textAlign:'center',\r\n    padding:'10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color:'#fff',\r\n    textDecoration:'none'\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nexport class AddTodo extends Component {\r\n    state = {\r\n        title:''\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({title:''});\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]:e.target.value}); //this -> [e.target.name]\r\n    render() {\r\n        return (\r\n            <form onSubmit = {this.onSubmit} style ={{display: 'flex'}}> {/*flex is used to prevent overflow */}\r\n                <input\r\n                  type='text'\r\n                  name='title'\r\n                  style={{flex: '10', padding: '5px'}}\r\n                  placeholder='Add Todo ...'\r\n                  value={this.state.title}\r\n                  onChange= {this.onChange}\r\n                />\r\n                <input\r\n                  type='submit'\r\n                  value='Submit'\r\n                  className='btn'\r\n                  style={{flex: '1'}}\r\n                />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTodo\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class TodoItem extends Component {\r\n    getStyle = () => {\r\n        return{\r\n          background: '#f4f4f4',\r\n          padding:'10px',\r\n          borderBottom: '1px #ccc dotted',\r\n          textDecoration:this.props.todo.completed ?\r\n          'line-through' : 'none'\r\n        }\r\n    }\r\n\r\n    markComplete= (e) => {\r\n        console.log(this.props)\r\n\r\n    }\r\n    render() {\r\n        const {id,title }= this.props.todo;\r\n        return (\r\n            <div style={this.getStyle()}>\r\n              <p>\r\n                <input type ='checkbox' onChange={this.props.markComplete.bind(this, id)} /> {' '}\r\n                {title}\r\n                <button onClick={this.props.delTodo.bind(this,id)} style={btnStyle}>X</button>\r\n              </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired\r\n}\r\n\r\nconst btnStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding:'5px 8px',\r\n    borderRadius:'50%',\r\n    cursor:'pointer',\r\n    float: 'right'\r\n}\r\n\r\n\r\nexport default TodoItem\r\n","import React,{Component} from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todo extends Component {\r\n\r\n  render() {\r\n      //console.log(this.props.todo);\r\n    return this.props.todos.map((todo)=>(\r\n      <TodoItem key={todo.id} todo={todo} \r\n       markComplete={this.props.markComplete} delTodo={this.props.delTodo}/>\r\n    ));\r\n  }\r\n}\r\n\r\n// PropTypes\r\nTodo.propTypes = {      //here it should be .propTypes\r\n    todos:PropTypes.array.isRequired\r\n}\r\nexport default Todo;\r\n","import React from 'react'\r\n\r\n function About() {\r\n    return (\r\n        <React.Fragment>\r\n             <h1>About</h1>\r\n             <p> This is a To-do List App created using React.Js framework. </p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default About;","import React,{Component} from 'react';\nimport './App.css'; //external css\nimport {BrowserRouter as Router,Route} from 'react-router-dom'; //to route the pages\nimport Header from './components/layout/Header';\nimport AddTodo  from './components/AddTodo';\nimport Todo from './components/Todo';\nimport About from './components/pages/About';\nimport uuid from 'uuid'; //creating random id's when adding todos\n\n\n\nclass App extends Component {\n  state={\n    todos: [\n      {\n        id:uuid.v4(), // uuid version 4\n        title: 'Get up early',\n        completed:false //intially kept falsed(checkbox unchecked)\n      },\n      {\n        id:uuid.v4(),\n        title: 'Have breakfast',\n        completed:false\n      },\n      {\n        id:uuid.v4(),\n        title: 'Have Lunch',\n        completed:false \n      },\n      {\n        id:uuid.v4(),\n        title: 'Have Dinner',\n        completed:false\n      },\n      {\n        id:uuid.v4(),\n        title: 'Go sleep Early',\n        completed:false\n      }\n    ]\n  }\n\n  //Toggle mark complete\n  markComplete = (id) => {\n    this.setState({todos: this.state.todos.map(todo => {\n      if(todo.id === id){\n        todo.completed = !todo.completed\n      }\n      return todo;\n    }) });\n  }\n\n  //Delete Todo\n  delTodo= (id) => {\n    this.setState({todos: [...this.state.todos.filter(todo => todo.id\n    !== id\n    )]});\n  }\n\n  // Add Todo\n  addTodo = (title) =>{\n    const newTodo = {\n      id: uuid.v4(),\n      title,\n      completed: false\n    }\n    this.setState({todos: [...this.state.todos,newTodo]});\n  }\n\n  render() {\n    return (\n      <Router basename = \"/react-todolistapp/\">\n      <div className='App'>\n        <div className='container'>\n          <Header/>\n          <Route exact path='/' render ={props => ( //Route exact path is used to direct exact location of /\n              <React.Fragment> {/* instead of using div ,we can wrap everything inside React.Fragment */}\n              <AddTodo addTodo={this.addTodo}/> \n              <Todo todos={this.state.todos} markComplete ={this.markComplete} delTodo={this.delTodo} />\n            </React.Fragment>\n          )} />\n          <Route path='/about' component ={About} />\n        </div>\n      </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}